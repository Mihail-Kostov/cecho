#!/usr/bin/env bash
source $(dirname $0)/functions.inc

function testSwitches() {
  __run
  assertEquals "no_arguments exit status"   "0"                 "$status"
  assertEquals "no_arguments stdout_md5"    "aba4"              "$(__stdout_md5)"

  __run --help
  assertEquals "help exit status"           "0"                 "$status"
  assertEquals "help stdout"                "DESCRIPTION:"      "$(__stdout | head -n1)"

  __run --version
  assertEquals "version stdout"             "0"                 "$(__stdout | grep -c -E '^v[0-9]+\.[0-9\.]+$' &> /dev/null; echo $?)"

  __run unquoted string
  assertEquals "an unquoted string"         "c4dc"      "$(__stdout_md5)"

  __run "two" "strings"
  assertEquals "two strings"                "ac44"      "$(__stdout_md5)"

  __run "string with \n char"
  assertEquals "string with \\n char"       "40ef"      "$(__stdout_md5)"
}

function testColouredStrings() {
  assertEquals "when --background=red" "2e15" "$(__run --background=red "blah"; __stdout_md5)"
  assertEquals "when --foreground=red" "af36" "$(__run --foreground=red "blah"; __stdout_md5)"
  assertEquals "when --foreground=234" "b7d8" "$(__run --foreground=234 "blah"; __stdout_md5)"
  assertEquals "when --black"          "ab2f" "$(__run --black "blah"; __stdout_md5)"
  assertEquals "when --blue"           "f1ed" "$(__run --blue "blah"; __stdout_md5)"
  assertEquals "when --cyan"           "9eef" "$(__run --cyan "blah"; __stdout_md5)"
  assertEquals "when --green"          "3d68" "$(__run --green "blah"; __stdout_md5)"
  assertEquals "when --grey"           "8f6e" "$(__run --grey "blah"; __stdout_md5)"
  assertEquals "when --light-grey"     "8f6e" "$(__run --light-grey "blah"; __stdout_md5)"
  assertEquals "when --magenta"        "0aa0" "$(__run --magenta "blah"; __stdout_md5)"
  assertEquals "when --red"            "af36" "$(__run --red "blah"; __stdout_md5)"
  assertEquals "when --yellow"         "3db9" "$(__run --yellow "blah"; __stdout_md5)"
}

function testInlineColourChanges() {
  assertEquals "{F_blue}blue"           "7ab7" "$(__run "{F_blue}blue"; __stdout_md5)"
  assertEquals "--inline {F_blue}blue"  "f717" "$(__run --inline "{F_blue}blue"; __stdout_md5)"
  assertEquals "--inline {F_2}blah"     "3d68" "$(__run --inline "{F_2}blah"; __stdout_md5)"
  assertEquals "--inline {F_blue}blue"  "f717" "$(__run --inline "{F_blue}blue"; __stdout_md5)"
  assertEquals "--inline {B_blue}blue"  "890f" "$(__run --inline "{B_blue}blue"; __stdout_md5)"
  assertEquals "--inline {F_blue}blue{reset}none"  "75fc" "$(__run --inline "{F_blue}blue{reset}none"; __stdout_md5)"
  assertEquals "--inline {B_blue}blue{reset}none"  "b69b" "$(__run --inline "{B_blue}blue{reset}none"; __stdout_md5)"
}

function testPositioning() {
  export COLUMNS=80
  assertEquals "when --center"         "ce57" "$(__run --center "blah"; __stdout_md5)"
  assertEquals "when --right"          "9deb" "$(__run --right "blah"; __stdout_md5)"
  assertEquals "when --margin-left=3"  "fea1" "$(__run --margin-left=3 "blah"; __stdout_md5)"
  assertEquals "when --margin-right=3" "cb39" "$(__run --margin-right=3 "blah"; __stdout_md5)"
  assertEquals "when --margin=3"       "fea1" "$(__run --margin=3 "blah"; __stdout_md5)"
}

function testDoublespace() {
  __run --doublespace "blah with spaces"
  assertEquals "when --doublespace"                   "3b14"  "$(__stdout_md5)"

  __run --right --doublespace "blah"
  assertEquals "should not end in space"              "1e2a"  "$(__stdout_md5)"

  __run --margin=40 --doublespace "blah"
  assertEquals "with a margin"                        "aba4"  "$(__stdout_md5)"
}

# BROKEN TESTS
# ./cecho --right --margin-right=79 "blah blah blah blahsoei soeifj osei josei "

# load and run shUnit2
source $(dirname $0)/shunit/src/shunit2

# vim: ai ts=2 sw=2 et sts=2 ft=sh
